-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from ParClbla.y
-----------------------------------------------------------------------------

state 22 contains 2 shift/reduce conflicts.
state 37 contains 1 shift/reduce conflicts.
state 43 contains 1 shift/reduce conflicts.

rule 32 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pEnv -> Env                                 (0)
	%start_pExp -> Exp                                 (1)
	UpperCaseString -> L_UpperCaseString               (2)
	LowerCaseString -> L_LowerCaseString               (3)
	Env -> ListInstruction                             (4)
	ListInstruction ->                                 (5)
	ListInstruction -> ListInstruction Instruction ';'   (6)
	Instruction -> Instruction1                        (7)
	Instruction -> TypeDefinition                      (8)
	Instruction -> FunctionDefinition                  (9)
	Instruction -> FunctionDeclaration                 (10)
	Instruction1 -> Instruction2                       (11)
	Instruction2 -> Instruction3                       (12)
	Instruction3 -> '(' Instruction ')'                (13)
	TypeDefinition -> 'data' TypeName Parameters '=' AlgebraicTypeBody   (14)
	TypeName -> UpperCaseString                        (15)
	Parameters -> ListVariable                         (16)
	ListVariable ->                                    (17)
	ListVariable -> ListVariable Variable              (18)
	Variable -> LowerCaseString                        (19)
	AlgebraicTypeBody -> ListAlgebraicTypeBodyElement   (20)
	ListAlgebraicTypeBodyElement ->                    (21)
	ListAlgebraicTypeBodyElement -> ListAlgebraicTypeBodyElement AlgebraicTypeBodyElement '|'   (22)
	AlgebraicTypeBodyElement -> TypeConstructor ListType   (23)
	TypeConstructor -> UpperCaseString                 (24)
	ListType ->                                        (25)
	ListType -> ListType Type                          (26)
	Type -> TypeName Parameters                        (27)
	Type -> Variable                                   (28)
	Type -> Type '->' Type                             (29)
	Type -> '(' Type ')'                               (30)
	FunctionDeclaration -> Variable '::' Type          (31)
	FunctionName -> Variable                           (32)
	FunctionDefinition -> Variable '=' Exp             (33)
	Exp -> Exp Exp                                     (34)
	Exp -> '(' Exp ')'                                 (35)
	Exp -> Variable                                    (36)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'->'           { PT _ (TS _ 3) }
	'::'           { PT _ (TS _ 4) }
	';'            { PT _ (TS _ 5) }
	'='            { PT _ (TS _ 6) }
	'data'         { PT _ (TS _ 7) }
	'|'            { PT _ (TS _ 8) }
	L_UpperCaseString{ PT _ (T_UpperCaseString $$) }
	L_LowerCaseString{ PT _ (T_LowerCaseString $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pEnv     rule  0
	%start_pExp     rule  1
	UpperCaseString rule  2
	LowerCaseString rule  3
	Env             rule  4
	ListInstruction rules 5, 6
	Instruction     rules 7, 8, 9, 10
	Instruction1    rule  11
	Instruction2    rule  12
	Instruction3    rule  13
	TypeDefinition  rule  14
	TypeName        rule  15
	Parameters      rule  16
	ListVariable    rules 17, 18
	Variable        rule  19
	AlgebraicTypeBody rule  20
	ListAlgebraicTypeBodyElement rules 21, 22
	AlgebraicTypeBodyElement rule  23
	TypeConstructor rule  24
	ListType        rules 25, 26
	Type            rules 27, 28, 29, 30
	FunctionDeclaration rule  31
	FunctionName    rule  32
	FunctionDefinition rule  33
	Exp             rules 34, 35, 36

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'('            reduce using rule 5
	'data'         reduce using rule 5
	L_LowerCaseStringreduce using rule 5
	%eof           reduce using rule 5

	Env            goto state 9
	ListInstructiongoto state 10

State 1


	'('            shift, and enter state 7
	L_LowerCaseStringshift, and enter state 8

	LowerCaseStringgoto state 4
	Variable       goto state 5
	Exp            goto state 6

State 2


	L_UpperCaseStringshift, and enter state 3


State 3

	UpperCaseString -> L_UpperCaseString .              (rule 2)

	'('            reduce using rule 2
	')'            reduce using rule 2
	'->'           reduce using rule 2
	';'            reduce using rule 2
	'='            reduce using rule 2
	'|'            reduce using rule 2
	L_UpperCaseStringreduce using rule 2
	L_LowerCaseStringreduce using rule 2


State 4

	Variable -> LowerCaseString .                       (rule 19)

	'('            reduce using rule 19
	')'            reduce using rule 19
	'->'           reduce using rule 19
	'::'           reduce using rule 19
	';'            reduce using rule 19
	'='            reduce using rule 19
	'|'            reduce using rule 19
	L_UpperCaseStringreduce using rule 19
	L_LowerCaseStringreduce using rule 19
	%eof           reduce using rule 19


State 5

	Exp -> Variable .                                   (rule 36)

	'('            reduce using rule 36
	')'            reduce using rule 36
	';'            reduce using rule 36
	L_LowerCaseStringreduce using rule 36
	%eof           reduce using rule 36


State 6

	%start_pExp -> Exp .                                (rule 1)
	Exp -> Exp . Exp                                    (rule 34)

	'('            shift, and enter state 7
	L_LowerCaseStringshift, and enter state 8
	%eof           accept

	LowerCaseStringgoto state 4
	Variable       goto state 5
	Exp            goto state 22

State 7

	Exp -> '(' . Exp ')'                                (rule 35)

	'('            shift, and enter state 7
	L_LowerCaseStringshift, and enter state 8

	LowerCaseStringgoto state 4
	Variable       goto state 5
	Exp            goto state 21

State 8

	LowerCaseString -> L_LowerCaseString .              (rule 3)

	'('            reduce using rule 3
	')'            reduce using rule 3
	'->'           reduce using rule 3
	'::'           reduce using rule 3
	';'            reduce using rule 3
	'='            reduce using rule 3
	'|'            reduce using rule 3
	L_UpperCaseStringreduce using rule 3
	L_LowerCaseStringreduce using rule 3
	%eof           reduce using rule 3


State 9

	%start_pEnv -> Env .                                (rule 0)

	%eof           accept


State 10

	Env -> ListInstruction .                            (rule 4)
	ListInstruction -> ListInstruction . Instruction ';'    (rule 6)

	'('            shift, and enter state 19
	'data'         shift, and enter state 20
	L_LowerCaseStringshift, and enter state 8
	%eof           reduce using rule 4

	LowerCaseStringgoto state 4
	Instruction    goto state 11
	Instruction1   goto state 12
	Instruction2   goto state 13
	Instruction3   goto state 14
	TypeDefinition goto state 15
	Variable       goto state 16
	FunctionDeclarationgoto state 17
	FunctionDefinitiongoto state 18

State 11

	ListInstruction -> ListInstruction Instruction . ';'    (rule 6)

	';'            shift, and enter state 29


State 12

	Instruction -> Instruction1 .                       (rule 7)

	')'            reduce using rule 7
	';'            reduce using rule 7


State 13

	Instruction1 -> Instruction2 .                      (rule 11)

	')'            reduce using rule 11
	';'            reduce using rule 11


State 14

	Instruction2 -> Instruction3 .                      (rule 12)

	')'            reduce using rule 12
	';'            reduce using rule 12


State 15

	Instruction -> TypeDefinition .                     (rule 8)

	')'            reduce using rule 8
	';'            reduce using rule 8


State 16

	FunctionDeclaration -> Variable . '::' Type         (rule 31)
	FunctionDefinition -> Variable . '=' Exp            (rule 33)

	'::'           shift, and enter state 27
	'='            shift, and enter state 28


State 17

	Instruction -> FunctionDeclaration .                (rule 10)

	')'            reduce using rule 10
	';'            reduce using rule 10


State 18

	Instruction -> FunctionDefinition .                 (rule 9)

	')'            reduce using rule 9
	';'            reduce using rule 9


State 19

	Instruction3 -> '(' . Instruction ')'               (rule 13)

	'('            shift, and enter state 19
	'data'         shift, and enter state 20
	L_LowerCaseStringshift, and enter state 8

	LowerCaseStringgoto state 4
	Instruction    goto state 26
	Instruction1   goto state 12
	Instruction2   goto state 13
	Instruction3   goto state 14
	TypeDefinition goto state 15
	Variable       goto state 16
	FunctionDeclarationgoto state 17
	FunctionDefinitiongoto state 18

State 20

	TypeDefinition -> 'data' . TypeName Parameters '=' AlgebraicTypeBody    (rule 14)

	L_UpperCaseStringshift, and enter state 3

	UpperCaseStringgoto state 24
	TypeName       goto state 25

State 21

	Exp -> Exp . Exp                                    (rule 34)
	Exp -> '(' Exp . ')'                                (rule 35)

	'('            shift, and enter state 7
	')'            shift, and enter state 23
	L_LowerCaseStringshift, and enter state 8

	LowerCaseStringgoto state 4
	Variable       goto state 5
	Exp            goto state 22

State 22

	Exp -> Exp . Exp                                    (rule 34)
	Exp -> Exp Exp .                                    (rule 34)

	'('            shift, and enter state 7
			(reduce using rule 34)

	')'            reduce using rule 34
	';'            reduce using rule 34
	L_LowerCaseStringshift, and enter state 8
			(reduce using rule 34)

	%eof           reduce using rule 34

	LowerCaseStringgoto state 4
	Variable       goto state 5
	Exp            goto state 22

State 23

	Exp -> '(' Exp ')' .                                (rule 35)

	'('            reduce using rule 35
	')'            reduce using rule 35
	';'            reduce using rule 35
	L_LowerCaseStringreduce using rule 35
	%eof           reduce using rule 35


State 24

	TypeName -> UpperCaseString .                       (rule 15)

	'('            reduce using rule 15
	')'            reduce using rule 15
	'->'           reduce using rule 15
	';'            reduce using rule 15
	'='            reduce using rule 15
	'|'            reduce using rule 15
	L_UpperCaseStringreduce using rule 15
	L_LowerCaseStringreduce using rule 15


State 25

	TypeDefinition -> 'data' TypeName . Parameters '=' AlgebraicTypeBody    (rule 14)

	'='            reduce using rule 17
	L_LowerCaseStringreduce using rule 17

	Parameters     goto state 36
	ListVariable   goto state 37

State 26

	Instruction3 -> '(' Instruction . ')'               (rule 13)

	')'            shift, and enter state 35


State 27

	FunctionDeclaration -> Variable '::' . Type         (rule 31)

	'('            shift, and enter state 34
	L_UpperCaseStringshift, and enter state 3
	L_LowerCaseStringshift, and enter state 8

	UpperCaseStringgoto state 24
	LowerCaseStringgoto state 4
	TypeName       goto state 31
	Variable       goto state 32
	Type           goto state 33

State 28

	FunctionDefinition -> Variable '=' . Exp            (rule 33)

	'('            shift, and enter state 7
	L_LowerCaseStringshift, and enter state 8

	LowerCaseStringgoto state 4
	Variable       goto state 5
	Exp            goto state 30

State 29

	ListInstruction -> ListInstruction Instruction ';' .    (rule 6)

	'('            reduce using rule 6
	'data'         reduce using rule 6
	L_LowerCaseStringreduce using rule 6
	%eof           reduce using rule 6


State 30

	FunctionDefinition -> Variable '=' Exp .            (rule 33)
	Exp -> Exp . Exp                                    (rule 34)

	'('            shift, and enter state 7
	')'            reduce using rule 33
	';'            reduce using rule 33
	L_LowerCaseStringshift, and enter state 8

	LowerCaseStringgoto state 4
	Variable       goto state 5
	Exp            goto state 22

State 31

	Type -> TypeName . Parameters                       (rule 27)

	'('            reduce using rule 17
	')'            reduce using rule 17
	'->'           reduce using rule 17
	';'            reduce using rule 17
	'|'            reduce using rule 17
	L_UpperCaseStringreduce using rule 17
	L_LowerCaseStringreduce using rule 17

	Parameters     goto state 42
	ListVariable   goto state 37

State 32

	Type -> Variable .                                  (rule 28)

	'('            reduce using rule 28
	')'            reduce using rule 28
	'->'           reduce using rule 28
	';'            reduce using rule 28
	'|'            reduce using rule 28
	L_UpperCaseStringreduce using rule 28
	L_LowerCaseStringreduce using rule 28


State 33

	Type -> Type . '->' Type                            (rule 29)
	FunctionDeclaration -> Variable '::' Type .         (rule 31)

	')'            reduce using rule 31
	'->'           shift, and enter state 41
	';'            reduce using rule 31


State 34

	Type -> '(' . Type ')'                              (rule 30)

	'('            shift, and enter state 34
	L_UpperCaseStringshift, and enter state 3
	L_LowerCaseStringshift, and enter state 8

	UpperCaseStringgoto state 24
	LowerCaseStringgoto state 4
	TypeName       goto state 31
	Variable       goto state 32
	Type           goto state 40

State 35

	Instruction3 -> '(' Instruction ')' .               (rule 13)

	')'            reduce using rule 13
	';'            reduce using rule 13


State 36

	TypeDefinition -> 'data' TypeName Parameters . '=' AlgebraicTypeBody    (rule 14)

	'='            shift, and enter state 39


State 37

	Parameters -> ListVariable .                        (rule 16)
	ListVariable -> ListVariable . Variable             (rule 18)

	'('            reduce using rule 16
	')'            reduce using rule 16
	'->'           reduce using rule 16
	';'            reduce using rule 16
	'='            reduce using rule 16
	'|'            reduce using rule 16
	L_UpperCaseStringreduce using rule 16
	L_LowerCaseStringshift, and enter state 8
			(reduce using rule 16)


	LowerCaseStringgoto state 4
	Variable       goto state 38

State 38

	ListVariable -> ListVariable Variable .             (rule 18)

	'('            reduce using rule 18
	')'            reduce using rule 18
	'->'           reduce using rule 18
	';'            reduce using rule 18
	'='            reduce using rule 18
	'|'            reduce using rule 18
	L_UpperCaseStringreduce using rule 18
	L_LowerCaseStringreduce using rule 18


State 39

	TypeDefinition -> 'data' TypeName Parameters '=' . AlgebraicTypeBody    (rule 14)

	')'            reduce using rule 21
	';'            reduce using rule 21
	L_UpperCaseStringreduce using rule 21

	AlgebraicTypeBodygoto state 45
	ListAlgebraicTypeBodyElementgoto state 46

State 40

	Type -> Type . '->' Type                            (rule 29)
	Type -> '(' Type . ')'                              (rule 30)

	')'            shift, and enter state 44
	'->'           shift, and enter state 41


State 41

	Type -> Type '->' . Type                            (rule 29)

	'('            shift, and enter state 34
	L_UpperCaseStringshift, and enter state 3
	L_LowerCaseStringshift, and enter state 8

	UpperCaseStringgoto state 24
	LowerCaseStringgoto state 4
	TypeName       goto state 31
	Variable       goto state 32
	Type           goto state 43

State 42

	Type -> TypeName Parameters .                       (rule 27)

	'('            reduce using rule 27
	')'            reduce using rule 27
	'->'           reduce using rule 27
	';'            reduce using rule 27
	'|'            reduce using rule 27
	L_UpperCaseStringreduce using rule 27
	L_LowerCaseStringreduce using rule 27


State 43

	Type -> Type . '->' Type                            (rule 29)
	Type -> Type '->' Type .                            (rule 29)

	'('            reduce using rule 29
	')'            reduce using rule 29
	'->'           shift, and enter state 41
			(reduce using rule 29)

	';'            reduce using rule 29
	'|'            reduce using rule 29
	L_UpperCaseStringreduce using rule 29
	L_LowerCaseStringreduce using rule 29


State 44

	Type -> '(' Type ')' .                              (rule 30)

	'('            reduce using rule 30
	')'            reduce using rule 30
	'->'           reduce using rule 30
	';'            reduce using rule 30
	'|'            reduce using rule 30
	L_UpperCaseStringreduce using rule 30
	L_LowerCaseStringreduce using rule 30


State 45

	TypeDefinition -> 'data' TypeName Parameters '=' AlgebraicTypeBody .    (rule 14)

	')'            reduce using rule 14
	';'            reduce using rule 14


State 46

	AlgebraicTypeBody -> ListAlgebraicTypeBodyElement .    (rule 20)
	ListAlgebraicTypeBodyElement -> ListAlgebraicTypeBodyElement . AlgebraicTypeBodyElement '|'    (rule 22)

	')'            reduce using rule 20
	';'            reduce using rule 20
	L_UpperCaseStringshift, and enter state 3

	UpperCaseStringgoto state 47
	AlgebraicTypeBodyElementgoto state 48
	TypeConstructorgoto state 49

State 47

	TypeConstructor -> UpperCaseString .                (rule 24)

	'('            reduce using rule 24
	'|'            reduce using rule 24
	L_UpperCaseStringreduce using rule 24
	L_LowerCaseStringreduce using rule 24


State 48

	ListAlgebraicTypeBodyElement -> ListAlgebraicTypeBodyElement AlgebraicTypeBodyElement . '|'    (rule 22)

	'|'            shift, and enter state 51


State 49

	AlgebraicTypeBodyElement -> TypeConstructor . ListType    (rule 23)

	'('            reduce using rule 25
	'|'            reduce using rule 25
	L_UpperCaseStringreduce using rule 25
	L_LowerCaseStringreduce using rule 25

	ListType       goto state 50

State 50

	AlgebraicTypeBodyElement -> TypeConstructor ListType .    (rule 23)
	ListType -> ListType . Type                         (rule 26)

	'('            shift, and enter state 34
	'|'            reduce using rule 23
	L_UpperCaseStringshift, and enter state 3
	L_LowerCaseStringshift, and enter state 8

	UpperCaseStringgoto state 24
	LowerCaseStringgoto state 4
	TypeName       goto state 31
	Variable       goto state 32
	Type           goto state 52

State 51

	ListAlgebraicTypeBodyElement -> ListAlgebraicTypeBodyElement AlgebraicTypeBodyElement '|' .    (rule 22)

	')'            reduce using rule 22
	';'            reduce using rule 22
	L_UpperCaseStringreduce using rule 22


State 52

	ListType -> ListType Type .                         (rule 26)
	Type -> Type . '->' Type                            (rule 29)

	'('            reduce using rule 26
	'->'           shift, and enter state 41
	'|'            reduce using rule 26
	L_UpperCaseStringreduce using rule 26
	L_LowerCaseStringreduce using rule 26


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 37
Number of terminals: 10
Number of non-terminals: 25
Number of states: 53
